{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"AGE_ListAdd",
				"AGE_ListAddFront"
			],
			[
				"printf",
				"printf(\"ERROR"
			],
			[
				"renderspr",
				"renderSprite_age"
			],
			[
				"RenderSpr",
				"renderSprite_age"
			],
			[
				"AGE_CAmer",
				"AGE_DrawSetCameraTransform"
			],
			[
				"Key",
				"AGE_KeyIsDown"
			],
			[
				"battle",
				"battlefield"
			],
			[
				"Battle",
				"BattlefieldDestroy"
			],
			[
				"AGE_Key",
				"AGE_KeyIsDown"
			],
			[
				"DE",
				"depth"
			],
			[
				"ex",
				"extern"
			],
			[
				"SCREE",
				"SCREEN_HEIGHT"
			],
			[
				"camera",
				"cameraOffset"
			],
			[
				"rend",
				"renderSpritesList"
			],
			[
				"sprite",
				"spriteBatch_age"
			],
			[
				"batt",
				"battlefieldField"
			],
			[
				"bat",
				"battlefieldSquare"
			],
			[
				"battl",
				"battlefieldField"
			],
			[
				"Age",
				"AGE_Sprite"
			],
			[
				"AGE_Came",
				"AGE_DrawChangeCameraTransform"
			],
			[
				"render",
				"renderSpritesList"
			],
			[
				"Batt",
				"BattlefieldInit"
			],
			[
				"AGE_Vec",
				"AGE_VectorAdd"
			],
			[
				"Vect",
				"Vector"
			],
			[
				"pos",
				"position"
			],
			[
				"AGE_Vect",
				"AGE_VectorMultiply"
			],
			[
				"AGE_Delta",
				"AGE_DeltaSecondsGet"
			],
			[
				"AGE_delta",
				"AGE_DeltaMilliSecondsGet"
			],
			[
				"max",
				"MAX_FPS"
			],
			[
				"MAXFP",
				"MAX_FPS"
			],
			[
				"vs",
				"VSynced"
			],
			[
				"frame",
				"MAX_TICKS_PER_FRAME"
			],
			[
				"LINK",
				"LINKER_FLAGS"
			],
			[
				"err",
				"ERROR_LOG"
			],
			[
				"ren",
				"renderSpritesList"
			],
			[
				"spr",
				"spriteBatch_age"
			],
			[
				"scree",
				"screenHeight"
			],
			[
				"fpste",
				"fpsTextPos"
			],
			[
				"AGE_Sprite",
				"AGE_SpriteRender"
			],
			[
				"AGE_VEc",
				"AGE_Vector"
			],
			[
				"AGE_sprite",
				"AGE_SpriteLoadFromText"
			],
			[
				"curr",
				"currentClip"
			],
			[
				"Vecto",
				"AGE_Vector"
			],
			[
				"ka",
				"kaji"
			],
			[
				"expl",
				"explosionAnimation"
			],
			[
				"a",
				"animation"
			],
			[
				"ANIMA",
				"Animation"
			],
			[
				"AGE_",
				"AGE_Animation"
			],
			[
				"VEc",
				"AGE_Vector"
			],
			[
				"AGE_Anima",
				"AGE_Animation_Update"
			],
			[
				"EXPL",
				"explosionSheet"
			],
			[
				"anima",
				"explosionAnimation"
			],
			[
				"AGE_vec",
				"AGE_Vector"
			],
			[
				"AGE_Anina",
				"AGE_Animation"
			],
			[
				"clip",
				"clipList"
			],
			[
				"age",
				"AGE_List"
			],
			[
				"AGE_List",
				"AGE_ListInit"
			],
			[
				"renderSpr",
				"renderSprite"
			],
			[
				"camea",
				"CAMERA_SPEED"
			],
			[
				"Vec",
				"Vector"
			],
			[
				"SDL_sca",
				"SDL_SCANCODE_LEFT"
			],
			[
				"AGE_key",
				"AGE_KeyIsDown"
			],
			[
				"AGE_Draw",
				"AGE_DrawBegin"
			],
			[
				"Cl",
				"clip"
			],
			[
				"rendre",
				"renderSprite_age"
			],
			[
				"AGE_Listat",
				"AGE_ListPeekAt"
			],
			[
				"renders",
				"renderSpriteIterator"
			],
			[
				"AGE_Spr",
				"AGE_SpriteSortMode"
			],
			[
				"AGE_Timer",
				"AGE_TimerGetTicks"
			],
			[
				"AGE_Mous",
				"AGE_MouseHandleEvent"
			],
			[
				"AGE_ke",
				"AGE_KeyboardUpdate"
			],
			[
				"EVE",
				"EventHandler"
			],
			[
				"user",
				"userUpdate"
			],
			[
				"event",
				"eventHandle"
			],
			[
				"Eve",
				"EventHandler"
			],
			[
				"AGE_Listadd",
				"AGE_ListAdd"
			],
			[
				"AGE_VEctor",
				"AGE_Vector"
			],
			[
				"AGE_Rect",
				"AGE_RectContains"
			],
			[
				"Bott",
				"bottom"
			],
			[
				"AGE_vect",
				"AGE_VectorSubtract"
			],
			[
				"AGE_Vecto",
				"AGE_VectorMultiply"
			],
			[
				"index",
				"index"
			],
			[
				"AGE_ListPeek",
				"AGE_ListPeekAt"
			],
			[
				"AGE_ListPee",
				"AGE_ListPeekAt"
			],
			[
				"List",
				"AGE_List"
			],
			[
				"AGE_list",
				"AGE_ListPeekBack"
			],
			[
				"new",
				"newNode"
			],
			[
				"eleme",
				"element"
			],
			[
				"elem",
				"elementSize"
			],
			[
				"sizeo",
				"sizeOfElement"
			],
			[
				"g",
				"g"
			],
			[
				"k",
				"k"
			],
			[
				"size",
				"sizeof"
			],
			[
				"AGE_GE",
				"AGE_Generics"
			],
			[
				"ma",
				"mouse_handle_event(&e"
			],
			[
				"AGE_spriteRe",
				"AGE_SpriteLoadFromText"
			],
			[
				"AGE_SpriteLoad",
				"AGE_SpriteLoadFromText"
			],
			[
				"AGE",
				"AGE_Sprite"
			],
			[
				"vsyn",
				"vSync"
			],
			[
				"SCR",
				"SCREEN_HEIGHT"
			],
			[
				"SCRE",
				"SCREEN_WIDTH"
			],
			[
				"Reso",
				"RESOURCES_FOLDER"
			],
			[
				"Middl",
				"MiddleIsPressed"
			],
			[
				"Righ",
				"RightIsPressed"
			],
			[
				"mouse",
				"mouse_handle_event"
			],
			[
				"SDL_MOUSE",
				"SDL_MOUSEMOTION"
			],
			[
				"mous",
				"mouse_handle_event"
			],
			[
				"keybo",
				"keyboard_input"
			],
			[
				"keyboard_",
				"keyboard_update"
			],
			[
				"start",
				"startTime"
			],
			[
				"Is",
				"IsPaused"
			],
			[
				"sprite_load",
				"sprite_load"
			],
			[
				"SDL_FLIP",
				"SDL_FLIP_NONE"
			],
			[
				"SDL_Settex",
				"SDL_SetTextureAlphaMod"
			],
			[
				"load",
				"loadedSurface"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.c",
			"settings":
			{
				"buffer_size": 2558,
				"line_ending": "Unix"
			}
		},
		{
			"file": "battlefield.c",
			"settings":
			{
				"buffer_size": 1801,
				"line_ending": "Unix"
			}
		},
		{
			"file": "AGE/AGE.h",
			"settings":
			{
				"buffer_size": 2045,
				"line_ending": "Unix"
			}
		},
		{
			"file": "AGE/AGE_Generics.h",
			"settings":
			{
				"buffer_size": 833,
				"line_ending": "Unix"
			}
		},
		{
			"file": "AGE/AGE_Graphics.h",
			"settings":
			{
				"buffer_size": 1908,
				"line_ending": "Unix"
			}
		},
		{
			"file": "AGE/AGE_Input.h",
			"settings":
			{
				"buffer_size": 625,
				"line_ending": "Unix"
			}
		},
		{
			"file": "LICENSE",
			"settings":
			{
				"buffer_size": 1082,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/C++/C++ Single File.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 159.0,
		"last_filter": "git pull",
		"selected_items":
		[
			[
				"git pull",
				"Git: Pull"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git add ",
				"Git: Add..."
			],
			[
				"git commi",
				"Git: Commit"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Git add",
				"Git: Add..."
			],
			[
				" add",
				"Git: Add Current File"
			],
			[
				"git",
				"Git: Push"
			],
			[
				"gitcom",
				"Git: Commit"
			],
			[
				"Pack",
				"Preferences: Browse Packages"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/rokner/Desktop/SDL/MyGame/My.gitignore",
		"/home/rokner/Desktop/SDL/MyGame/.gitignore",
		"/home/rokner/Desktop/SDL/MyGame/LICENSE",
		"/home/rokner/Desktop/SDL/MyGame/battlefield.c",
		"/home/rokner/Desktop/SDL/MyGame/battlefield.h",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Generics.h",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Graphics.h",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Input.h",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE.h",
		"/home/rokner/Desktop/SDL/MyGame/main.c",
		"/home/rokner/Desktop/SDL/MyGame/Helsys.sublime-project",
		"/home/rokner/Desktop/SDL/MyGame/AGE/makefile",
		"/home/rokner/Desktop/SDL/MyGame/log.txt",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_List.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Rectangle.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_SpriteBatch.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Sprite.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/log.txt",
		"/home/rokner/Desktop/SDL/MyGame/AGE/DONE",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Core.c",
		"/home/rokner/Desktop/SDL/MyGame/main.h",
		"/home/rokner/Desktop/SDL/MyGame/makefile",
		"/home/rokner/Downloads/gdevilspie-0.5/README",
		"/home/rokner/Downloads/devilspie-0.22/INSTALL",
		"/home/rokner/Downloads/gdevilspie-0.5/gdevilspie",
		"/home/rokner/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/rokner/.config/sublime-text-3/Packages/Terminal/Default (Linux).sublime-keymap",
		"/home/rokner/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Animation.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Timer.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Vector.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Helper.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Keyboard_Input.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Mouse_Input.c",
		"/home/rokner/Desktop/SDL/MyGame/backup.c",
		"/home/rokner/Desktop/SDL/MyGame/libAGE.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE_SpriteBatch.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Sprite.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Core.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Animation.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE_List.c",
		"/home/rokner/Downloads/Scripts.cs",
		"/home/rokner/Downloads/Animation.cs",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Vector.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Helper.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Core",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Mouse_Input.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Keyboard_Input.c",
		"/home/rokner/Downloads/MathAid.cs",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Rectangle.c",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Time.h",
		"/home/rokner/Desktop/SDL/MyGame/AGE/AGE_Generic_Structures.h",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Timer.c",
		"/home/rokner/.config/sublime-text-3/Packages/SublimeClang/internals/common.py",
		"/home/rokner/Desktop/SDL/MyGame/AGE_Sprite_Batch.c",
		"/home/rokner/.config/sublime-text-3/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/home/rokner/.config/sublime-text-3/Packages/Terminal/Terminal.py",
		"/home/rokner/Desktop/SDL/MyGame/make.c",
		"/home/rokner/Desktop/SDL/MyGame/core.c",
		"/home/rokner/Desktop/SDL/MyGame/keyboard_input.c",
		"/home/rokner/Desktop/SDL/MyGame/mouse_input.c",
		"/home/rokner/Desktop/SDL/MyGame/timer.c",
		"/home/rokner/Desktop/SDL/MyGame/sprite.c",
		"/home/rokner/Desktop/SDL/MyGame/sprite.h",
		"/home/rokner/Desktop/SDL/MyGame/make",
		"/home/rokner/Desktop/SDL/MyGame/keyboard_input.h",
		"/home/rokner/Desktop/SDL/MyGame/mouse_input.h",
		"/home/rokner/Desktop/SDL/MyGame/GENERICS.h",
		"/home/rokner/Desktop/SDL/MyGame/magic.h",
		"/home/rokner/Desktop/SDL/MyGame/SDL2/SDL.h",
		"/home/rokner/Desktop/SDL/MyGame/timer.h",
		"/home/rokner/.config/sublime-text-3/Packages/Git/Git.sublime-settings",
		"/home/rokner/.config/sublime-text-3/Packages/Terminal/Terminal.sublime-settings",
		"/home/rokner/.config/sublime-text-3/Packages/User/Terminal.sublime-settings",
		"/home/rokner/Desktop/CodeJam/infinitePancakes.c",
		"/home/rokner/Desktop/CodeJam/in.txt",
		"/home/rokner/Desktop/CodeJam/standingOvation.c",
		"/home/rokner/Desktop/CodeJam/standingOvation.txt",
		"/home/rokner/Desktop/SDL/main.cpp",
		"/home/rokner/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/rokner/Desktop/SDL/MyGame/Sprite.h",
		"/home/rokner/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/rokner/Desktop/SDL/15_rotation_and_flipping.cpp",
		"/home/rokner/.cache/.fr-yjmgEt/15_rotation_and_flipping/15_rotation_and_flipping.cpp",
		"/home/rokner/Desktop/SDL/11_clip_rendering_and_sprite_sheets/11_clip_rendering_and_sprite_sheets.cpp",
		"/home/rokner/Desktop/SDL/01_hello_SDL.cpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"depth",
			"printf",
			"SCREEN",
			", ",
			"Heigth",
			"h",
			"w",
			"y",
			"x",
			"->",
			"b.",
			"a.",
			"->",
			"length-1",
			"printf",
			"Back",
			"\n    // printf(\"resize\");    \n\n    // if(makeLower==0)\n    // {\n    //     list->size *= 2;\n    // }\n    // else\n    // {\n    //     list->size /= 2;\n    // }\n    // void *oldData[list->size];\n    // oldData = malloc(list->size * list->elementSize);\n    // for(i = 0; i < list->index; i++)\n    // {\n    //     void* p = AGE_ListAt(list,i);\n    //     // printf(\"i:%d - %d\",i, *((int*)p));\n    //     oldData[i] = p;\n    // }\n\n    // free(list->data);\n\n    // list->data = oldData;\n    // printf(\"listSize:%d\\n\",list->size);\n    // for (i = 0; i < list->index; ++i)\n    // {\n    //     printf(\"%d\\n\",i);\n    //     printf(\"%d\\n\",*(int*)list->data[i]);\n    // }\n    // printf(\"endresize\");\n    // return list->size;",
			"vector",
			"v.",
			"v)",
			"v->",
			"v,",
			"struct ",
			"vector_t",
			"Timer",
			"Sprite",
			"dots",
			"keyboard",
			"ctrl+l",
			"f5",
			"f4",
			"ctrl+s",
			"f5",
			"ctrl+f5",
			"textColor",
			"back",
			"oid sprite_init(Sprite *sprite)\n//{\n	//sprite->texture = NULL;\n	//sprite->Width = 0;\n	//sprite->Height = 0;\n//}",
			"void sprite_init(Sprite *sprite)\n{	\n	sprite->texture = NULL;\n	sprite->Width = 0;\n	sprite->Height = 0;\n}",
			"gRenderer",
			");\n",
			"DL_SetColorKey( loadedSurface, SDL_TRUE, SDL_MapRGB( loadedSurface->format, 0, 0xFF, 0xFF ) );\n        newTexture = SDL_CreateTextureFromSurface( gRenderer, loadedSurface );\n\n		if( newTexture == NULL )\n		{\n			printf( \"Unable to create texture from %s! SDL Error: %s\\n\", path, SDL_GetError() );\n		}\n		else\n		{\n			//Get image dimensions\n			sprite->Width = loadedSurface->w;\n		",
			"DL_SetColorKey( loadedSurface, SDL_TRUE, SDL_MapRGB( loadedSurface->format, 0, 0xFF, 0xFF ) );\n        newTexture = SDL_CreateTextureFromSurface( gRenderer, loadedSurface );\n\n		if( newTexture == NULL )\n		{\n			printf( \"Unable to create texture from %s! SDL Error: %s\\n\", path, SDL_GetError() );\n		}\n		else\n		{\n			//Get image dimensions\n			sprite->Width = loadedSurface->w;\n			sprite->Height = loadedSurface->h;\n		}\n",
			"DL_SetColorKey( loadedSurface, SDL_TRUE, SDL_MapRGB( loadedSurface->format, 0, 0xFF, 0xFF ) );\n        newTexture = SDL_CreateTextureFromSurface( gRenderer, loadedSurface );\n",
			"ewTexture = SDL_CreateTextureFromSurface( gRenderer, loadedSurface );\n\n		if( newTexture == NULL )\n		{",
			"{\n",
			"\n		SDL_SetColorKey( loadedSurface, SDL_TRUE, SDL_MapRGB( loadedSurface->format, 0, 0xFF, 0xFF ) );\n        newTexture = SDL_CreateTextureFromSurface( gRenderer, loadedSurface );\n\n		if( newTexture == NULL )\n		{",
			"ctrl+e",
			"unable",
			"bool",
			"();\n",
			"images",
			"();\n",
			"comment",
			"ctrl+e",
			"comment",
			"if( !gArrowTexture.loadFromFile( \"arrow.png\" ) )\n	{\n		printf( \"Failed to load arrow texture!\\n\" );\n		success = false;\n	}",
			"arrow"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"MAX",
			";\n",
			"Height",
			"Heigth",
			"Width",
			"Y",
			"X",
			".",
			"rect2->",
			"rect1->",
			".",
			"Last",
			"list",
			"list.",
			"list)",
			"list->",
			"list,",
			"",
			"AGE_List",
			"AGE_Timer",
			"AGE_Sprite",
			"leftButtonText",
			"DL_SetColorKey( loadedSurface, SDL_TRUE, SDL_MapRGB( loadedSurface->format, 0, 0xFF, 0xFF ) );\n        newTexture = SDL_CreateTextureFromSurface( gRenderer, loadedSurface );\n\n		if( newTexture == NULL )\n		{\n			printf( \"Unable to create texture from %s! SDL Error: %s\\n\", path, SDL_GetError() );\n		}\n		else\n		{\n			//Get image dimensions\n			sprite->Width = loadedSurface->w;\n		",
			"boolean"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2558,
						"regions":
						{
						},
						"selection":
						[
							[
								268,
								268
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "battlefield.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1801,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "AGE/AGE.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2045,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "AGE/AGE_Generics.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 833,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "AGE/AGE_Graphics.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1908,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "AGE/AGE_Input.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 625,
						"regions":
						{
						},
						"selection":
						[
							[
								85,
								85
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "LICENSE",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1082,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 350.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 397.0
	},
	"pinned_build_system": "",
	"project": "Helsys.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "main",
		"selected_items":
		[
			[
				"main",
				"~/Desktop/SDL/MyGame/Main.sublime-workspace"
			],
			[
				"",
				"~/Desktop/SDL/MyGame/Main.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 213.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
